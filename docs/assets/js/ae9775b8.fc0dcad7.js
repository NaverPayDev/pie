"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7387],{7172:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var n=s(3159),i=s(15);const a={},r="@naverpay/es-http-status-codes",o={id:"@naverpay/es-http-status-codes/main/README",title:"@naverpay/es-http-status-codes",description:"A lightweight, efficient, and tree-shakable utility for working with HTTP status codes in TypeScript/JavaScript projects. Inspired by the popular http-status-codes package, this utility offers optimized features for modern development practices.",source:"@site/docs/@naverpay/es-http-status-codes/main/README.md",sourceDirName:"@naverpay/es-http-status-codes/main",slug:"/@naverpay/es-http-status-codes/main/",permalink:"/pie/docs/docs/@naverpay/es-http-status-codes/main/",draft:!1,unlisted:!1,editUrl:"https://github.com/NaverPayDev/pie/tree/main/packages/@naverpay/es-http-status-codes/main/README.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",next:{title:"@naverpay/es-http-status-codes",permalink:"/pie/docs/docs/@naverpay/es-http-status-codes/0.0.2/"}},c={},l=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"API",id:"api",level:2},{value:"Development",id:"development",level:2},{value:"Inspiration",id:"inspiration",level:2},{value:"Contributing",id:"contributing",level:2},{value:"License",id:"license",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"naverpayes-http-status-codes",children:"@naverpay/es-http-status-codes"}),"\n",(0,n.jsxs)(t.p,{children:["A lightweight, efficient, and tree-shakable utility for working with HTTP status codes in TypeScript/JavaScript projects. Inspired by the popular ",(0,n.jsx)(t.a,{href:"https://github.com/prettymuchbryce/http-status-codes",children:"http-status-codes"})," package, this utility offers optimized features for modern development practices."]}),"\n",(0,n.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Complete HTTP Status Code Coverage"}),": Includes all standard HTTP status codes and their corresponding reason phrases."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Auto-generated Code"}),": All code is automatically generated from a single source of truth, ensuring consistency and ease of maintenance."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"ESM Support"}),": Fully supports ECMAScript modules (ESM) for modern JavaScript environments."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Highly Tree-Shakable"}),": Uses plain objects instead of enums, allowing for superior tree-shaking capabilities."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"TypeScript Ready"}),": Written in TypeScript, providing excellent type support out of the box."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npm install @naverpay/es-http-status-codes\n"})}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"import { HttpStatusCodes, ReasonPhrases } from '@naverpay/es-http-status-codes';\n\nconsole.log(HttpStatusCodes.OK); // 200\nconsole.log(ReasonPhrases[HttpStatusCodes.OK]); // \"OK\"\n"})}),"\n",(0,n.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"HttpStatusCodes"}),": An object containing all HTTP status codes as constants."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"ReasonPhrases"}),": An object mapping status codes to their corresponding reason phrases."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"development",children:"Development"}),"\n",(0,n.jsx)(t.p,{children:"This project uses an automated script to generate its core files. To regenerate the files after making changes to the source data:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npm run generate\n"})}),"\n",(0,n.jsx)(t.h2,{id:"inspiration",children:"Inspiration"}),"\n",(0,n.jsxs)(t.p,{children:["This project draws inspiration from the ",(0,n.jsx)(t.a,{href:"https://github.com/prettymuchbryce/http-status-codes",children:"http-status-codes"})," package, aiming to provide a similar utility with enhanced features and modern JavaScript support."]}),"\n",(0,n.jsx)(t.h2,{id:"contributing",children:"Contributing"}),"\n",(0,n.jsx)(t.p,{children:"Contributions are welcome! Please feel free to submit a Pull Request."}),"\n",(0,n.jsx)(t.h2,{id:"license",children:"License"}),"\n",(0,n.jsx)(t.p,{children:"This project is licensed under the MIT License - see the LICENSE file for details."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},15:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(1855);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);